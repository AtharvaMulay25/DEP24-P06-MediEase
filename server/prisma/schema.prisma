// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Medicine {
  id         String @id @default(uuid())
  brandName  String
  saltName   String
  categoryId String

  Stock    Stock[]
  Checkup  Checkup[]
  Category Category  @relation(fields: [categoryId], references: [id])
}

model Supplier {
  id           String  @id @default(uuid())
  name         String
  address      String
  city         String?
  state        String
  pinCode      String?
  mobileNumber String
  email        String?

  PurchaseList PurchaseList[]
}

model Staff {
  id             String    @id @default(uuid())
  name           String
  email          String    @unique
  role           Role
  speciality     String?
  gender         Gender
  shiftSchedule  String
  DoctorCheckups Checkup[] @relation("DoctorCheckups")
  StaffCheckups  Checkup[] @relation("StaffCheckups")

  @@map("staff")
}

model Stock {
  id          String   @id @default(uuid())
  medicineId  String
  stock       Int
  inQuantity  Int
  outQuantity Int
  Medicine    Medicine @relation(fields: [medicineId], references: [id])

  @@map("stock")
}

model PurchaseList {
  id           String   @id @default(uuid())
  supplierId   String
  purchaseDate DateTime
  invoiceNo    String

  Supplier Supplier @relation(fields: [supplierId], references: [id])

  @@map("purchaseList")
}

model Category {
  id           String           @id @default(uuid())
  categoryName MedicineCategory
  strengthType String?

  Medicine Medicine[]

  @@map("category")
}

model Purchase {
  id         String    @id @default(uuid())
  invoiceNo  String //CHECK         
  medicineId String
  mfgDate    DateTime?
  expiryDate DateTime
  batchNo    String //CHECK 
  quantity   Int

  @@map("purchase")
}

model Patient {
  id                 String          @id @default(uuid())
  name               String
  department         String?
  dob                DateTime
  age                Int
  email              String
  bloodGroup         String
  program            String?
  fatherOrSpouseName String?
  category           PatientCategory
  gender             Gender
  Checkup            Checkup[]

  @@map("patient")
}

model Checkup {
  id             String   @id @default(uuid())
  patientId      String
  temperature    Float?
  date           DateTime
  bloodPressure  String?
  symptoms       String?
  diseaseOrCause String
  doctorId       String
  medicineId     String
  staffId        String

  Patient  Patient  @relation(fields: [patientId], references: [id])
  Doctor   Staff    @relation("DoctorCheckups", fields: [doctorId], references: [id])
  Medicine Medicine @relation(fields: [medicineId], references: [id])
  Staff    Staff    @relation("StaffCheckups", fields: [staffId], references: [id])

  @@map("checkup")
}

enum MedicineCategory {
  CAPUSLE
  TABLET
  OINTMENT
  LOTION
  SYRUP
  SACHET
  NASAL_SPRAY
  EYE_DROP
  EAR_DROP
  INHALER
  VACCINE
  POWDER
}

enum Role {
  DOCTOR
  PARAMEDICAL
}

enum PatientCategory {
  STUDENT
  FACULTY
  STAFF
  VISITOR
}

enum Gender {
  MALE
  FEMALE
  OTHERS
}
